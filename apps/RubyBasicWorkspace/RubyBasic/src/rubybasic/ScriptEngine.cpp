#include "rubybasic/ScriptEngine.hpp"

#include "mruby.h"
#include "mruby/class.h"
#include "mruby/compile.h"
#include "mruby/irep.h"
#include "rubybasic/BindApplication.hpp"
#include "rubybasic/BindGraphics.hpp"
#include "rubybasic/BindInput.hpp"
#include <stdint.h>

namespace rubybasic {

// moudle DebugInfo
const uint8_t DebugInfo[] = {
0x52,0x49,0x54,0x45,0x30,0x30,0x30,0x31,0xf3,0x0f,0x00,0x00,0x04,0x6b,0x4d,0x41,
0x54,0x5a,0x30,0x30,0x30,0x30,0x49,0x52,0x45,0x50,0x00,0x00,0x04,0x4d,0x30,0x30,
0x30,0x30,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x01,0x00,0x02,0x00,0x00,
0x00,0x04,0x00,0x80,0x00,0x05,0x00,0x80,0x00,0x44,0x00,0x80,0x00,0xc5,0x00,0x00,
0x00,0x4a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x09,0x44,0x65,0x62,0x75,
0x67,0x49,0x6e,0x66,0x6f,0x00,0x00,0x00,0x00,0x63,0x00,0x01,0x00,0x02,0x00,0x00,
0x00,0x0e,0x00,0x80,0x00,0x06,0x00,0x80,0x40,0x47,0x01,0x00,0x02,0xc0,0x00,0x80,
0x00,0x46,0x00,0x80,0x00,0x06,0x00,0x80,0x40,0x47,0x01,0x00,0x04,0xc0,0x00,0x80,
0x40,0x46,0x00,0x80,0x00,0x06,0x00,0x80,0x40,0x47,0x01,0x00,0x06,0xc0,0x00,0x80,
0x80,0x46,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x29,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x00,0x03,0x66,0x70,0x73,0x00,0x00,0x06,0x77,0x69,0x6e,0x64,0x6f,0x77,
0x00,0x00,0x05,0x6d,0x6f,0x75,0x73,0x65,0x00,0x00,0x00,0x00,0x6c,0x00,0x02,0x00,
0x06,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,0x26,0x01,0x00,0x00,0x3d,0x01,0x80,0x00,
0x06,0x02,0x00,0x00,0xbd,0x02,0x80,0x00,0x06,0x02,0x80,0x40,0x20,0x01,0x80,0x01,
0x20,0x01,0x00,0xc0,0x3e,0x01,0x80,0x01,0x3d,0x01,0x00,0xc0,0x3e,0x01,0x00,0x00,
0x29,0x00,0x00,0x00,0x03,0x10,0x00,0x00,0x10,0x00,0x05,0x25,0x33,0x2e,0x32,0x66,
0x10,0x00,0x04,0x20,0x66,0x70,0x73,0x00,0x00,0x00,0x02,0x00,0x06,0x66,0x6f,0x72,
0x6d,0x61,0x74,0x00,0x00,0x0e,0x67,0x65,0x74,0x5f,0x66,0x72,0x61,0x6d,0x65,0x5f,
0x72,0x61,0x74,0x65,0x00,0x00,0x00,0x00,0xd3,0x00,0x02,0x00,0x04,0x00,0x00,0x00,
0x17,0x00,0x00,0x00,0x26,0x01,0x00,0x00,0x3d,0x01,0x80,0x00,0x06,0x01,0x80,0x00,
0x20,0x01,0x00,0xc0,0x3e,0x01,0x80,0x00,0xbd,0x01,0x00,0xc0,0x3e,0x01,0x80,0x00,
0x06,0x01,0x80,0x40,0x20,0x01,0x00,0xc0,0x3e,0x01,0x80,0x01,0x3d,0x01,0x00,0xc0,
0x3e,0x01,0x80,0x00,0x06,0x01,0x80,0x80,0x20,0x01,0x00,0xc0,0x3e,0x01,0x80,0x00,
0xbd,0x01,0x00,0xc0,0x3e,0x01,0x80,0x00,0x06,0x01,0x80,0xc0,0x20,0x01,0x00,0xc0,
0x3e,0x01,0x80,0x01,0xbd,0x01,0x00,0xc0,0x3e,0x01,0x00,0x00,0x29,0x00,0x00,0x00,
0x04,0x10,0x00,0x0d,0x77,0x69,0x6e,0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x3a,0x20,
0x28,0x10,0x00,0x02,0x2c,0x20,0x10,0x00,0x0a,0x29,0x2c,0x20,0x73,0x69,0x7a,0x65,
0x3a,0x20,0x28,0x10,0x00,0x01,0x29,0x00,0x00,0x00,0x04,0x00,0x0c,0x77,0x69,0x6e,
0x64,0x6f,0x77,0x5f,0x70,0x6f,0x73,0x5f,0x78,0x00,0x00,0x0c,0x77,0x69,0x6e,0x64,
0x6f,0x77,0x5f,0x70,0x6f,0x73,0x5f,0x79,0x00,0x00,0x0c,0x77,0x69,0x6e,0x64,0x6f,
0x77,0x5f,0x77,0x69,0x64,0x74,0x68,0x00,0x00,0x0d,0x77,0x69,0x6e,0x64,0x6f,0x77,
0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x00,0x00,0x00,0x01,0x65,0x00,0x03,0x00,0x08,
0x00,0x00,0x00,0x37,0x00,0x00,0x00,0x26,0x01,0x00,0x00,0x3d,0x01,0x80,0x80,0x01,
0x02,0x00,0x00,0x06,0x02,0x80,0x00,0xbd,0x03,0x00,0x00,0x91,0x03,0x00,0x80,0x20,
0x03,0x80,0x00,0x91,0x03,0x80,0xc0,0x20,0x02,0x00,0x01,0xa0,0x01,0x81,0x00,0xac,
0x01,0x00,0xc0,0x01,0x01,0x80,0x80,0x01,0x02,0x00,0x01,0x3d,0x01,0x81,0x00,0xac,
0x01,0x00,0xc0,0x01,0x01,0x80,0x80,0x01,0x02,0x3f,0xff,0x83,0x02,0xc0,0x00,0x83,
0x02,0x01,0x00,0x41,0x02,0x80,0x03,0x40,0x02,0x01,0x40,0x21,0x02,0x80,0x01,0xbd,
0x02,0x01,0x80,0xa0,0x01,0x81,0x00,0xac,0x01,0x00,0xc0,0x01,0x01,0x80,0x80,0x01,
0x02,0x00,0x02,0x3d,0x01,0x81,0x00,0xac,0x01,0x00,0xc0,0x01,0x01,0x80,0x80,0x01,
0x02,0x3f,0xff,0x83,0x02,0xc0,0x00,0x83,0x02,0x01,0x00,0x41,0x02,0x80,0x05,0x40,
0x02,0x01,0x40,0x21,0x02,0x80,0x01,0xbd,0x02,0x01,0x80,0xa0,0x01,0x81,0x00,0xac,
0x01,0x00,0xc0,0x01,0x01,0x80,0x80,0x01,0x02,0x00,0x02,0xbd,0x01,0x81,0x00,0xac,
0x01,0x00,0xc0,0x01,0x01,0x80,0x80,0x01,0x02,0x3f,0xff,0x83,0x02,0xc0,0x00,0x83,
0x02,0x01,0x00,0x41,0x02,0x80,0x07,0x40,0x02,0x01,0x40,0x21,0x02,0x80,0x01,0xbd,
0x02,0x01,0x80,0xa0,0x01,0x81,0x00,0xac,0x01,0x00,0xc0,0x01,0x01,0x00,0x00,0x29,
0x00,0x00,0x00,0x06,0x10,0x00,0x07,0x6d,0x6f,0x75,0x73,0x65,0x3a,0x20,0x10,0x00,
0x0a,0x28,0x25,0x34,0x64,0x2c,0x20,0x25,0x34,0x64,0x29,0x10,0x00,0x09,0x20,0x70,
0x72,0x65,0x73,0x73,0x3f,0x3a,0x20,0x10,0x00,0x00,0x10,0x00,0x08,0x20,0x64,0x6f,
0x77,0x6e,0x3f,0x3a,0x20,0x10,0x00,0x0b,0x20,0x72,0x65,0x6c,0x65,0x61,0x73,0x65,
0x3f,0x3a,0x20,0x00,0x00,0x00,0x07,0x00,0x06,0x66,0x6f,0x72,0x6d,0x61,0x74,0x00,
0x00,0x05,0x49,0x6e,0x70,0x75,0x74,0x00,0x00,0x07,0x6d,0x6f,0x75,0x73,0x65,0x5f,
0x78,0x00,0x00,0x07,0x6d,0x6f,0x75,0x73,0x65,0x5f,0x79,0x00,0x00,0x01,0x2b,0x00,
0x00,0x03,0x6d,0x61,0x70,0x00,0x00,0x04,0x6a,0x6f,0x69,0x6e,0x00,0x00,0x00,0x00,
0x57,0x00,0x03,0x00,0x05,0x00,0x00,0x00,0x09,0x02,0x00,0x00,0x26,0x01,0x80,0x00,
0x11,0x02,0x00,0x40,0x01,0x01,0x80,0x40,0xa0,0x01,0xc0,0x01,0x19,0x01,0x80,0x00,
0x3d,0x00,0x40,0x00,0x97,0x01,0x80,0x00,0xbd,0x01,0x80,0x00,0x29,0x00,0x00,0x00,
0x02,0x10,0x00,0x01,0x31,0x10,0x00,0x01,0x30,0x00,0x00,0x00,0x02,0x00,0x05,0x49,
0x6e,0x70,0x75,0x74,0x00,0x00,0x0c,0x6d,0x6f,0x75,0x73,0x65,0x5f,0x70,0x72,0x65,
0x73,0x73,0x3f,0x00,0x00,0x00,0x00,0x56,0x00,0x03,0x00,0x05,0x00,0x00,0x00,0x09,
0x02,0x00,0x00,0x26,0x01,0x80,0x00,0x11,0x02,0x00,0x40,0x01,0x01,0x80,0x40,0xa0,
0x01,0xc0,0x01,0x19,0x01,0x80,0x00,0x3d,0x00,0x40,0x00,0x97,0x01,0x80,0x00,0xbd,
0x01,0x80,0x00,0x29,0x00,0x00,0x00,0x02,0x10,0x00,0x01,0x31,0x10,0x00,0x01,0x30,
0x00,0x00,0x00,0x02,0x00,0x05,0x49,0x6e,0x70,0x75,0x74,0x00,0x00,0x0b,0x6d,0x6f,
0x75,0x73,0x65,0x5f,0x64,0x6f,0x77,0x6e,0x3f,0x00,0x00,0x00,0x00,0x59,0x00,0x03,
0x00,0x05,0x00,0x00,0x00,0x09,0x02,0x00,0x00,0x26,0x01,0x80,0x00,0x11,0x02,0x00,
0x40,0x01,0x01,0x80,0x40,0xa0,0x01,0xc0,0x01,0x19,0x01,0x80,0x00,0x3d,0x00,0x40,
0x00,0x97,0x01,0x80,0x00,0xbd,0x01,0x80,0x00,0x29,0x00,0x00,0x00,0x02,0x10,0x00,
0x01,0x31,0x10,0x00,0x01,0x30,0x00,0x00,0x00,0x02,0x00,0x05,0x49,0x6e,0x70,0x75,
0x74,0x00,0x00,0x0e,0x6d,0x6f,0x75,0x73,0x65,0x5f,0x72,0x65,0x6c,0x65,0x61,0x73,
0x65,0x3f,0x00,0x45,0x4e,0x44,0x00,0x00,0x00,0x00,0x08,
};

//----------------------------------------------------------
ScriptEngine::ScriptEngine(const char* aFilename)
: mFilename(aFilename)
, mMrb(NULL)
{
    open();
    load(mFilename);
}

//----------------------------------------------------------
ScriptEngine::~ScriptEngine()
{
    close();
}

//----------------------------------------------------------
void ScriptEngine::setup()
{
    // lfoad
    mrb_load_irep(mMrb, DebugInfo);
    
    // bind
    BindApplication::Bind(mMrb);
    BindGraphics::Bind(mMrb);
    BindInput::Bind(mMrb);

    // call setup
    funcallIf("setup");
}

//----------------------------------------------------------
mrb_value ScriptEngine::funcallIf(const char* aName)
{
    if (mMrb && isExistFunction(kernel_obj(), aName)) {
        int ai = mrb_gc_arena_save(mMrb);
        mrb_value value = mrb_funcall(mMrb, kernel_obj(), aName, 0);
        mrb_gc_arena_restore(mMrb, ai);
        closeOnException();
        return value;
    }

    return mrb_nil_value();
}

//----------------------------------------------------------
mrb_value ScriptEngine::funcallIf(const char* aName, mrb_value aArg1, mrb_value aArg2)
{
    if (mMrb && isExistFunction(kernel_obj(), aName)) {
        int ai = mrb_gc_arena_save(mMrb);
        mrb_value value = mrb_funcall(mMrb, kernel_obj(), aName, 2, aArg1, aArg2);
        mrb_gc_arena_restore(mMrb, ai);
        closeOnException();
        return value;
    }

    return mrb_nil_value();
}

//----------------------------------------------------------
mrb_value ScriptEngine::funcallIf(const char* aName, mrb_value aArg1, mrb_value aArg2, mrb_value aArg3)
{
    if (mMrb && isExistFunction(kernel_obj(), aName)) {
        int ai = mrb_gc_arena_save(mMrb);
        mrb_value value = mrb_funcall(mMrb, kernel_obj(), aName, 3, aArg1, aArg2, aArg3);
        mrb_gc_arena_restore(mMrb, ai);
        closeOnException();
        return value;
    }

    return mrb_nil_value();
}

//----------------------------------------------------------
void ScriptEngine::reload()
{
    reopen();  // comment out?
    load(mFilename);
    setup();
}

//----------------------------------------------------------
void ScriptEngine::open()
{
    mMrb = mrb_open();
}

//----------------------------------------------------------
void ScriptEngine::load(const char* aFilename)
{
    FILE *fd = fopen(mFilename, "r");
    mrb_load_file(mMrb, fd);
    fclose(fd);
}
    
//----------------------------------------------------------
void ScriptEngine::close()
{
    if (mMrb) {
        mrb_close(mMrb);
        mMrb = NULL;
    }
}

//----------------------------------------------------------
void ScriptEngine::reopen()
{
    close();
    open();
}

//----------------------------------------------------------
bool ScriptEngine::isExistFunction(mrb_value aSelf, const char* aFuncName)
{
    struct RClass *c = mrb_class(mMrb, aSelf);
    struct RProc *p = mrb_method_search_vm(mMrb, &c, mrb_intern(mMrb, aFuncName));
    return p != NULL;
}

//----------------------------------------------------------
void ScriptEngine::closeOnException()
{
    if (mMrb->exc) {
        mrb_p(mMrb, mrb_obj_value(mMrb->exc));
        mrb_close(mMrb);
        mMrb = NULL;
    }
}

}

